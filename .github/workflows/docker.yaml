name: Docker

on:
  push:
    branches:
    - master
    tags:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        version:
        - "20.10.23"
        - "23.0.2"
        - "24.0.2"
        flavor:
        - "ubuntu22.04"
        - "ubuntu22.04-nvidia520.56"
        include:
        - version: "24.0.2"
          flavor: "ubuntu22.04"
          latest: true
        - flavor: "ubuntu22.04-nvidia520.56"
          context: "ubuntu22.04-nvidia"
          cuda: "12.0.1"

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure
      id: config
      run: |-
        NPROC=$(nproc)

        echo "NPROC=$((NPROC*2+1))" >> $GITHUB_ENV
        echo "NPROC=$((NPROC*2+1))" >> $GITHUB_OUTPUT

        echo "repo-owner=${{ github.repository_owner }}" >> $GITHUB_OUTPUT
        echo "repo-name=${GITHUB_REPOSITORY#*/docker-}" >> $GITHUB_OUTPUT

    - name: Setup - Setup buildx
      uses: docker/setup-buildx-action@v3

    - name: Setup - Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Setup - Github Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Setup - Docker image metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |-
          ${{ steps.config.outputs.repo-owner }}/${{ steps.config.outputs.repo-name }}
          ghcr.io/${{ steps.config.outputs.repo-owner }}/${{ steps.config.outputs.repo-name }}
        flavor: |-
          latest=${{ !!matrix.latest }}
        tags: |-
          type=semver,pattern={{major}}.{{minor}},suffix=-${{ matrix.flavor }},value=${{ matrix.version }}

    - name: Build
      uses: docker/build-push-action@v5
      id: build
      with:
        context: ${{ matrix.context || matrix.flavor }}
        build-args: |
          version=${{ matrix.version }}
          cuda=${{ matrix.cuda }}
        push: true
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
